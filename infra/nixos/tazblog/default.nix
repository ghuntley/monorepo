# Generated by stackage2nix 0.4.0 from "./stack.yaml"
{ blogSource ? ./.
, nixpkgs ? import <nixpkgs> {} }:

with nixpkgs;
let
  inherit (stdenv.lib) extends;
  haskellLib = callPackage (nixpkgs.path + "/pkgs/development/haskell-modules/lib.nix") {};
  stackagePackages = import ./packages.nix;
  stackageConfig = import  ./configuration-packages.nix { inherit pkgs haskellLib; };
  stackPackages =
    { pkgs, stdenv, callPackage }:
    
    self: {
      "acid-state" = callPackage
        ({ mkDerivation, array, base, bytestring, cereal, containers
         , criterion, directory, extensible-exceptions, filepath, mtl
         , network, random, safecopy, stm, system-fileio, system-filepath
         , template-haskell, unix
         }:
         mkDerivation {
           pname = "acid-state";
           version = "0.14.3";
           sha256 = "1d8hq8cj6h4crfnkmds6mhrhhg7r1b1byb8fybaj8khfa99sj0nm";
           libraryHaskellDepends = [
             array base bytestring cereal containers directory
             extensible-exceptions filepath mtl network safecopy stm
             template-haskell unix
           ];
           benchmarkHaskellDepends = [
             base criterion directory mtl random system-fileio system-filepath
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acid-state/acid-state";
           description = "Add ACID guarantees to any serializable Haskell data structure";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "ixset" = callPackage
        ({ mkDerivation, base, containers, safecopy, syb, syb-with-class
         , template-haskell
         }:
         mkDerivation {
           pname = "ixset";
           version = "1.0.7";
           sha256 = "1la2gdlblgwpymlawcc9zqr7c5w942di12yshm35wg0x3dc5l3ig";
           libraryHaskellDepends = [
             base containers safecopy syb syb-with-class template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://happstack.com";
           description = "Efficient relational queries on Haskell sets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rss" = callPackage
        ({ mkDerivation, base, HaXml, network, network-uri, old-locale
         , time
         }:
         mkDerivation {
           pname = "rss";
           version = "3000.2.0.6";
           sha256 = "03crzmi9903w6xsdc00wd9jhsr41b8pglz9n502h68w3jkm6zr4d";
           libraryHaskellDepends = [
             base HaXml network network-uri old-locale time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/rss";
           description = "A library for generating RSS 2.0 feeds.";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "syb-with-class" = callPackage
        ({ mkDerivation, array, base, bytestring, containers
         , template-haskell
         }:
         mkDerivation {
           pname = "syb-with-class";
           version = "0.6.1.8";
           sha256 = "01b187jhhfp77l4zgks5gszkn9jmgjc44mw9yympw1fsfskljiz3";
           libraryHaskellDepends = [
             array base bytestring containers template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Scrap Your Boilerplate With Class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tazblog" = callPackage
        ({ mkDerivation, acid-state, base, base64-bytestring, blaze-html
         , blaze-markup, bytestring, crypto-api, cryptohash, hamlet
         , happstack-server, ixset, markdown, mtl, network, network-uri
         , old-locale, options, rss, safecopy, shakespeare, text, time
         , transformers
         }:
         mkDerivation {
           pname = "tazblog";
           version = "5.1.3";
           src = blogSource;
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             acid-state base base64-bytestring blaze-html blaze-markup
             bytestring crypto-api cryptohash hamlet happstack-server ixset
             markdown mtl network network-uri old-locale rss safecopy
             shakespeare text time transformers
           ];
           executableHaskellDepends = [ acid-state base network options ];
           description = "Tazjin's Blog";
           license = stdenv.lib.licenses.mit;
         }) {};
    };
  
  pkgOverrides = self: stackPackages {
    inherit pkgs stdenv;
    inherit (self) callPackage;
  };
  
in callPackage (nixpkgs.path + "/pkgs/development/haskell-modules") {
  ghc = pkgs.haskell.compiler.ghc802;
  compilerConfig = self: extends pkgOverrides (stackageConfig self);
  initialPackages = stackagePackages;
  configurationCommon = args: self: super: {};
  inherit haskellLib;
}
